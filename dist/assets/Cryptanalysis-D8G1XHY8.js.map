{"version":3,"file":"Cryptanalysis-D8G1XHY8.js","sources":["../../src/pages/contents/Cryptanalysis.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nimport ContentPageLayout from \"../../components/ContentPageLayout\";\n\ninterface CipherPair {\n  plain: string;\n  encrypted: string;\n}\n\nconst Cryptanalysis: React.FC = () => {\n  const [sortColumn, setSortColumn] = useState<number>(0);\n  const [plainText, setPlainText] = useState<string>(\"\");\n  const [encryptedText, setEncryptedText] = useState<string>(\"\");\n\n  const plainTextRef = useRef<HTMLDivElement>(null);\n  const encryptedTextRef = useRef<HTMLDivElement>(null);\n\n  // Cipher alphabet mapping - matches the HTML page exactly\n  const cipherPairs: CipherPair[] = [\n    { plain: \"a\", encrypted: \"e\" },\n    { plain: \"b\", encrypted: \"d\" },\n    { plain: \"c\", encrypted: \"t\" },\n    { plain: \"d\", encrypted: \"h\" },\n    { plain: \"e\", encrypted: \"y\" },\n    { plain: \"f\", encrypted: \"s\" },\n    { plain: \"g\", encrypted: \"f\" },\n    { plain: \"h\", encrypted: \"l\" },\n    { plain: \"i\", encrypted: \"g\" },\n    { plain: \"j\", encrypted: \"z\" },\n    { plain: \"k\", encrypted: \"b\" },\n    { plain: \"l\", encrypted: \"r\" },\n    { plain: \"m\", encrypted: \"j\" },\n    { plain: \"n\", encrypted: \"k\" },\n    { plain: \"o\", encrypted: \"c\" },\n    { plain: \"p\", encrypted: \"i\" },\n    { plain: \"q\", encrypted: \"p\" },\n    { plain: \"r\", encrypted: \"x\" },\n    { plain: \"s\", encrypted: \"n\" },\n    { plain: \"t\", encrypted: \"q\" },\n    { plain: \"u\", encrypted: \"o\" },\n    { plain: \"v\", encrypted: \"u\" },\n    { plain: \"w\", encrypted: \"a\" },\n    { plain: \"x\", encrypted: \"v\" },\n    { plain: \"y\", encrypted: \"m\" },\n    { plain: \"z\", encrypted: \"w\" },\n  ];\n\n  // Sort the cipher pairs based on the selected column\n  const sortedPairs = [...cipherPairs].sort((a, b) => {\n    const valueA = sortColumn === 0 ? a.plain : a.encrypted;\n    const valueB = sortColumn === 0 ? b.plain : b.encrypted;\n    return valueA.localeCompare(valueB);\n  });\n\n  // Scroll outputs to right end when text changes\n  useEffect(() => {\n    if (plainTextRef.current !== null) {\n      plainTextRef.current.scrollLeft = plainTextRef.current.scrollWidth;\n    }\n    if (encryptedTextRef.current !== null) {\n      encryptedTextRef.current.scrollLeft =\n        encryptedTextRef.current.scrollWidth;\n    }\n  }, [plainText, encryptedText]);\n\n  const handleSort = (columnIndex: number): void => {\n    setSortColumn(columnIndex);\n  };\n\n  const handleCharClick = (pair: CipherPair): void => {\n    setPlainText((prev) => prev + pair.plain);\n    setEncryptedText((prev) => prev + pair.encrypted);\n  };\n\n  const handleDelete = (): void => {\n    setPlainText((prev) => prev.slice(0, -1));\n    setEncryptedText((prev) => prev.slice(0, -1));\n  };\n\n  const handleClear = (): void => {\n    if (window.confirm(\"全部削除してよろしいですか?\")) {\n      setPlainText(\"\");\n      setEncryptedText(\"\");\n    }\n  };\n\n  const svgSymbols = (\n    <svg>\n      <symbol id=\"cryptanalysis-svg-src\" viewBox=\"0 0 48 48\">\n        <defs>\n          <style>{`\n            .cryptanalysis-svg-internal-a,\n            .cryptanalysis-svg-a,\n            .cryptanalysis-svg-b {\n              fill: none;\n            }\n            .cryptanalysis-svg-a,\n            .cryptanalysis-svg-b {\n              stroke: currentColor;\n              stroke-linejoin: round;\n              stroke-width: 2px;\n            }\n            .cryptanalysis-svg-b {\n              stroke-linecap: round;\n            }\n          `}</style>\n        </defs>\n        <title>lock_open_24</title>\n        <g id=\"レイヤー_2_cryptanalysis-svg\">\n          <g id=\"Rect_最後透明に_cryptanalysis-svg\">\n            <rect\n              className=\"cryptanalysis-svg-internal-a\"\n              width=\"48\"\n              height=\"48\"\n            />\n          </g>\n          <g id=\"icon\">\n            <rect\n              className=\"cryptanalysis-svg-a\"\n              x=\"11.13\"\n              y=\"20.13\"\n              width=\"26\"\n              height=\"22\"\n            />\n            <path\n              className=\"cryptanalysis-svg-b\"\n              d=\"M33.12,20.12v-6a9,9,0,0,0-17.29-3.5\"\n            />\n            <line\n              className=\"cryptanalysis-svg-b\"\n              x1=\"24.13\"\n              y1=\"29.13\"\n              x2=\"24.13\"\n              y2=\"33.13\"\n            />\n          </g>\n        </g>\n      </symbol>\n    </svg>\n  );\n\n  return (\n    <ContentPageLayout title=\"暗号解読\" svgSymbols={svgSymbols}>\n      <div className=\"prose dark:prose-invert max-w-none\">\n        <p className=\"rounded bg-blue-100/80 p-4 text-blue-800 dark:bg-blue-900/30 dark:text-blue-200\">\n          パンフレット記載の暗号解読はこのページです。無くても別の文字列を解読できます。\n        </p>\n\n        <h2 className=\"mt-8 text-2xl font-bold\">使用する暗号化方式</h2>\n        <p>\n          単一換字式暗号(たんいつかえじしき)という手法で暗号化された文字列を解読していただきます。\n          これは暗号化前の文章「平文」に対して、必ず同じ暗号文の文字に変換される暗号のことです。\n        </p>\n        <p>\n          例えば、平文の \"a\" が、暗号文の \"f\" に\n          <strong className=\"font-bold\">必ず</strong>\n          暗号化されるとき、これは単一換字式暗号化です。\n        </p>\n        <p>\n          有名な暗号化方式として「シーザ暗号」というものがあります。これは特定の文字を、それよりも辞書順に特定の数だけ後ろにある文字と置き換えるものです。\n          <br />\n          例えば、[a, b, c, ...] =&gt; [c, d, e,\n          ...]です。これは右に3つシフトしています。\n          <br />\n          これは先ほどの条件を満たすため単一換字式暗号の一種です。\n        </p>\n        <p>\n          今回は、シーザ暗号のようにシフトするのではなく a =&gt; f, b =&gt; z\n          のように一対一で紐づいた形式を使用します。\n          <br />\n          この形式であればシーザ暗号よりは強度が高くなり、より機密性が増します。\n          <br />\n          しかし、仕組みが単純なため頻度分析などを用いると簡単に解読できてしまいます。そのため現在では公開鍵暗号方式(RSA)や共通鍵暗号方式(AES)というものが使用されています。RSA暗号という単語を聞いたことがある人も少なくないはずです。\n        </p>\n\n        <h2 className=\"mt-8 text-2xl font-bold\">対応表</h2>\n        <p>\n          以下が対応表です。\n          <br />\n          <br />\n          「暗号前」「暗号後」をクリックするとソートできます。\n          <br />\n          解読の際は\n          <span className=\"font-semibold text-amber-600 dark:text-amber-400\">\n            「暗号後」をクリックしてソート\n          </span>\n          すると操作しやすいです。\n          <br />\n          <br />\n          書かれたアルファベットをクリックすると下のボックスに入っていきます。「暗号前の\"a\"」\n          「暗号後の\"e\"」のどちらをクリックしても同様の動作をします。\n        </p>\n\n        <div className=\"mt-6 overflow-x-auto rounded-lg border border-gray-200 dark:border-gray-700\">\n          <table className=\"w-full border-collapse text-left\">\n            <thead>\n              <tr className=\"bg-gray-100 dark:bg-gray-800\">\n                <th\n                  className={`cursor-pointer p-3 font-bold hover:bg-gray-200 dark:hover:bg-gray-700 ${sortColumn === 0 ? \"text-blue-600 dark:text-blue-400\" : \"\"}`}\n                  onClick={() => handleSort(0)}\n                >\n                  暗号前 {sortColumn === 0 && \"↓\"}\n                </th>\n                <th\n                  className={`cursor-pointer p-3 font-bold hover:bg-gray-200 dark:hover:bg-gray-700 ${sortColumn === 1 ? \"text-blue-600 dark:text-blue-400\" : \"\"}`}\n                  onClick={() => handleSort(1)}\n                >\n                  暗号後 {sortColumn === 1 && \"↓\"}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedPairs.map((pair, index) => (\n                <tr\n                  key={index}\n                  className=\"border-t border-gray-200 dark:border-gray-700\"\n                >\n                  <td\n                    className=\"cursor-pointer p-3 font-mono hover:bg-blue-100/50 dark:hover:bg-blue-900/30\"\n                    onClick={() => handleCharClick(pair)}\n                  >\n                    {pair.plain}\n                  </td>\n                  <td\n                    className=\"cursor-pointer p-3 font-mono hover:bg-blue-100/50 dark:hover:bg-blue-900/30\"\n                    onClick={() => handleCharClick(pair)}\n                  >\n                    {pair.encrypted}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"mt-8 rounded-lg bg-gray-100 p-6 dark:bg-gray-800\">\n          <p className=\"mb-4 font-medium\">以下の文字列を解読してみてください</p>\n          <ul className=\"mb-2 space-y-2 font-mono\">\n            <li>「ejy」</li>\n            <li>「jeqltrod」</li>\n            <li>「ixcfxejjgkf」</li>\n          </ul>\n        </div>\n\n        <div className=\"mt-8 space-y-4\">\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={handleDelete}\n              className=\"rounded bg-yellow-500 px-4 py-2 text-white hover:bg-yellow-600 dark:bg-yellow-600 dark:hover:bg-yellow-500\"\n            >\n              1つ削除\n            </button>\n            <button\n              onClick={handleClear}\n              className=\"rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600 dark:bg-red-600 dark:hover:bg-red-500\"\n            >\n              全削除\n            </button>\n          </div>\n\n          <div className=\"space-y-1\">\n            <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">\n              暗号前:\n            </p>\n            <div\n              ref={plainTextRef}\n              className=\"h-10 overflow-x-auto rounded border border-gray-200 bg-white p-2 font-mono whitespace-nowrap dark:border-gray-700 dark:bg-gray-900\"\n            >\n              {plainText}\n            </div>\n          </div>\n\n          <div className=\"space-y-1\">\n            <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">\n              暗号後:\n            </p>\n            <div\n              ref={encryptedTextRef}\n              className=\"h-10 overflow-x-auto rounded border border-gray-200 bg-white p-2 font-mono whitespace-nowrap dark:border-gray-700 dark:bg-gray-900\"\n            >\n              {encryptedText}\n            </div>\n          </div>\n        </div>\n\n        <p className=\"mt-16\">\n          逆に自分で暗号化して他人に解読してもらうというのも面白いかもしれません。生成した文字列はクリックしてコピーできるのでぜひ試してみてください。\n          <br />\n          <br />\n          ちなみにこのサイトは\"https\"というスキームで、\"ssl/tls\"という通信プロトコルを使用しています。これはwebサイトを閲覧する際の通信を暗号化する仕組みなのですが、これにも上述のRSA,\n          AESといった複雑な暗号方式が使用されています。\n        </p>\n      </div>\n    </ContentPageLayout>\n  );\n};\n\nexport default Cryptanalysis;\n"],"names":["Cryptanalysis","sortColumn","setSortColumn","useState","plainText","setPlainText","encryptedText","setEncryptedText","plainTextRef","useRef","encryptedTextRef","sortedPairs","a","b","valueA","valueB","useEffect","handleSort","columnIndex","handleCharClick","pair","prev","handleDelete","handleClear","svgSymbols","jsxs","jsx","ContentPageLayout","index"],"mappings":"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"}