{"version":3,"file":"BulletinBoard-BqH5HK6j.js","sources":["../../node_modules/lucide-react/dist/esm/icons/send.js","../../node_modules/lucide-react/dist/esm/icons/trash-2.js","../../node_modules/lucide-react/dist/esm/icons/users.js","../../src/pages/BulletinBoard/types.tsx","../../src/utils/timeout.ts","../../src/pages/BulletinBoard/services.tsx","../../src/utils/safeLocalStorage.ts","../../src/pages/BulletinBoard/BoardView.tsx","../../src/pages/BulletinBoard/BulletinBoardList.tsx","../../src/pages/BulletinBoard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = createLucideIcon(\"send\", __iconNode);\n\nexport { __iconNode, Send as default };\n//# sourceMappingURL=send.js.map\n","/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M10 11v6\", key: \"nco0om\" }],\n  [\"path\", { d: \"M14 11v6\", key: \"outv1u\" }],\n  [\"path\", { d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6\", key: \"miytrc\" }],\n  [\"path\", { d: \"M3 6h18\", key: \"d0wm0j\" }],\n  [\"path\", { d: \"M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\", key: \"e791ji\" }]\n];\nconst Trash2 = createLucideIcon(\"trash-2\", __iconNode);\n\nexport { __iconNode, Trash2 as default };\n//# sourceMappingURL=trash-2.js.map\n","/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"path\", { d: \"M16 3.128a4 4 0 0 1 0 7.744\", key: \"16gr8j\" }],\n  [\"path\", { d: \"M22 21v-2a4 4 0 0 0-3-3.87\", key: \"kshegd\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }]\n];\nconst Users = createLucideIcon(\"users\", __iconNode);\n\nexport { __iconNode, Users as default };\n//# sourceMappingURL=users.js.map\n","// BBSのスレ\nexport interface Board {\n  id: string;\n  title: string;\n  description: string;\n  created_at: string;\n  created_by: string;\n  status: \"open\" | \"closed\" | \"archived\";\n  post_count: number;\n  order: number;\n}\n\n// レス\nexport interface Post {\n  id: string;\n  board_id: string;\n  author: string;\n  content: string;\n  created_at: string;\n  post_number: number;\n}\n\n// BBSメタデータ\nexport interface BulletinBoardMetadata {\n  total_boards: number;\n  total_posts: number;\n  created_at: string;\n  last_updated: string;\n}\n\n// 新規レス用の型\nexport interface NewPost {\n  board_id: string;\n  author: string;\n  content: string;\n}\n\n// ページネーション用の型\nexport interface PostsPagination {\n  posts: Post[];\n  hasMore: boolean;\n  totalCount: number;\n}\n\n// 固定のスレID\nexport const BOARD_IDS = {\n  CLASSROOM: \"classroom\",\n  BROADCAST: \"broadcast\",\n  PLAYGROUND: \"playground\",\n  UNDERGROUND: \"underground\",\n} as const;\n\nexport type BoardId = (typeof BOARD_IDS)[keyof typeof BOARD_IDS];\n\n// デフォルトのスレ設定\nexport const DEFAULT_BOARDS: Record<\n  BoardId,\n  Omit<Board, \"created_at\" | \"created_by\" | \"post_count\">\n> = {\n  [BOARD_IDS.CLASSROOM]: {\n    id: BOARD_IDS.CLASSROOM,\n    title: \"教室【雑談/交流】\",\n    description:\n      \"(この値が表示されているときは、サーバがダウンしている可能性があります)\",\n    status: \"open\",\n    order: 1,\n  },\n  [BOARD_IDS.BROADCAST]: {\n    id: BOARD_IDS.BROADCAST,\n    title: \"放送室【お知らせ/告知】\",\n    description:\n      \"(この値が表示されているときは、サーバがダウンしている可能性があります)\",\n    status: \"open\",\n    order: 2,\n  },\n  [BOARD_IDS.PLAYGROUND]: {\n    id: BOARD_IDS.PLAYGROUND,\n    title: \"校庭【感想】\",\n    description:\n      \"(この値が表示されているときは、サーバがダウンしている可能性があります)\",\n    status: \"open\",\n    order: 3,\n  },\n  [BOARD_IDS.UNDERGROUND]: {\n    id: BOARD_IDS.UNDERGROUND,\n    title: \"地下【なんでも】\",\n    description:\n      \"(この値が表示されているときは、サーバがダウンしている可能性があります)\",\n    status: \"open\",\n    order: 4,\n  },\n};\n","/**\n * Promise にタイムアウト機能を追加するユーティリティ\n */\nexport const withTimeout = <T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n  errorMessage?: string,\n): Promise<T> => {\n  return Promise.race([\n    promise,\n    new Promise<never>((_, reject) => {\n      setTimeout(() => {\n        reject(\n          new Error(\n            errorMessage !== undefined\n              ? errorMessage\n              : `操作がタイムアウトしました (${timeoutMs}ms)`,\n          ),\n        );\n      }, timeoutMs);\n    }),\n  ]);\n};\n\n/**\n * Firebase操作用のデフォルトタイムアウト時間（10秒）\n */\nexport const FIREBASE_TIMEOUT_MS = 10000;\n\n/**\n * Firebase操作にタイムアウトを適用するヘルパー関数\n */\nexport const withFirebaseTimeout = <T>(promise: Promise<T>): Promise<T> => {\n  return withTimeout(\n    promise,\n    FIREBASE_TIMEOUT_MS,\n    \"サーバーへの接続がタイムアウトしました。サーバーがダウンしている可能性があります。\",\n  );\n};\n","import {\n  ref,\n  push,\n  set,\n  get,\n  update,\n  serverTimestamp,\n} from \"firebase/database\";\n\nimport {\n  DEFAULT_BOARDS,\n  type Board,\n  type Post,\n  type BulletinBoardMetadata,\n  type NewPost,\n  type BoardId,\n  type PostsPagination,\n} from \"./types\";\n\nimport { database } from \"@/config/firebase\";\nimport { withFirebaseTimeout } from \"@/utils/timeout\";\n\n// スレ一覧を取得\nexport const getBoards = async (): Promise<Board[]> => {\n  try {\n    const boardsRef = ref(database, \"bulletin_board/boards\");\n    const snapshot = await withFirebaseTimeout(get(boardsRef));\n    if (!snapshot.exists()) {\n      // 初期スレを作成\n      await initializeBoards();\n      return Object.values(DEFAULT_BOARDS).map((board) => ({\n        ...board,\n        created_at: new Date().toISOString(),\n        created_by: \"system\",\n        post_count: 0,\n      }));\n    }\n\n    const boardsData = snapshot.val() as Record<string, Board>;\n    return Object.values(boardsData).sort(\n      (a: Board, b: Board) => a.order - b.order,\n    );\n  } catch (error) {\n    console.error(\"スレの取得に失敗しました:\", error);\n    throw new Error(\"サーバーへの接続に失敗しました\");\n  }\n};\n\n// 特定のスレを取得\nexport const getBoard = async (boardId: BoardId): Promise<Board | null> => {\n  try {\n    const boardRef = ref(database, `bulletin_board/boards/${boardId}`);\n    const snapshot = await withFirebaseTimeout(get(boardRef));\n\n    if (!snapshot.exists()) {\n      return null;\n    }\n\n    return snapshot.val();\n  } catch (error) {\n    console.error(\"スレの取得に失敗しました:\", error);\n    throw new Error(\"サーバーへの接続に失敗しました\");\n  }\n};\n\n// スレのレス一覧を取得\nexport const getPosts = async (boardId: BoardId): Promise<Post[]> => {\n  try {\n    const postsRef = ref(database, `bulletin_board/posts/${boardId}`);\n    const snapshot = await withFirebaseTimeout(get(postsRef));\n\n    if (!snapshot.exists()) {\n      return [];\n    }\n\n    const postsData = snapshot.val() as Record<string, Post>;\n    return Object.values(postsData).sort(\n      (a: Post, b: Post) => b.post_number - a.post_number, // 最新が上に来るように降順にソート\n    );\n  } catch (error) {\n    console.error(\"レスの取得に失敗しました:\", error);\n    throw new Error(\"サーバーへの接続に失敗しました\");\n  }\n};\n\n// ページネーション対応のレス一覧を取得\nexport const getPostsWithPagination = async (\n  boardId: BoardId,\n  offset: number = 0,\n  limit: number = 20,\n): Promise<PostsPagination> => {\n  try {\n    const postsRef = ref(database, `bulletin_board/posts/${boardId}`);\n    const snapshot = await withFirebaseTimeout(get(postsRef));\n\n    if (!snapshot.exists()) {\n      return {\n        posts: [],\n        hasMore: false,\n        totalCount: 0,\n      };\n    }\n\n    const postsData = snapshot.val() as Record<string, Post>;\n    const allPosts = Object.values(postsData).sort(\n      (a: Post, b: Post) => b.post_number - a.post_number, // 最新が上に来るように降順にソート\n    );\n\n    const totalCount = allPosts.length;\n    const paginatedPosts = allPosts.slice(offset, offset + limit);\n    const hasMore = offset + limit < totalCount;\n\n    return {\n      posts: paginatedPosts,\n      hasMore,\n      totalCount,\n    };\n  } catch (error) {\n    console.error(\"レスの取得に失敗しました:\", error);\n    throw new Error(\"サーバーへの接続に失敗しました\");\n  }\n};\n\n// 新規レス作成\nexport const createPost = async (newPost: NewPost): Promise<boolean> => {\n  try {\n    const { board_id, author, content } = newPost;\n\n    // レス番号を取得\n    const boardRef = ref(database, `bulletin_board/boards/${board_id}`);\n    const boardSnapshot = await withFirebaseTimeout(get(boardRef));\n\n    if (!boardSnapshot.exists()) {\n      throw new Error(\"スレが存在しません\");\n    }\n\n    const board: Board = boardSnapshot.val();\n    const postNumber = board.post_count + 1;\n\n    // 新しいレスのデータ\n    const postData: Omit<Post, \"id\"> = {\n      board_id,\n      author,\n      content,\n      created_at: new Date().toISOString(),\n      post_number: postNumber,\n    };\n\n    // レスを追加\n    const postsRef = ref(database, `bulletin_board/posts/${board_id}`);\n    const newPostRef = push(postsRef);\n\n    const postWithId: Post = {\n      ...postData,\n      id: newPostRef.key!,\n    };\n\n    // トランザクション的な更新\n    const updates: Record<string, unknown> = {};\n    updates[`bulletin_board/posts/${board_id}/${newPostRef.key}`] = postWithId;\n    updates[`bulletin_board/boards/${board_id}/post_count`] = postNumber;\n    updates[`bulletin_board/boards/${board_id}/last_updated`] =\n      serverTimestamp();\n\n    await withFirebaseTimeout(update(ref(database), updates));\n\n    // メタデータ更新\n    await updateMetadata();\n\n    return true;\n  } catch (error) {\n    console.error(\"レスの作成に失敗しました:\", error);\n    return false;\n  }\n};\n\n// メタデータ更新\nconst updateMetadata = async (): Promise<void> => {\n  try {\n    const boardsRef = ref(database, \"bulletin_board/boards\");\n    const postsRef = ref(database, \"bulletin_board/posts\");\n\n    const [boardsSnapshot, postsSnapshot] = await Promise.all([\n      withFirebaseTimeout(get(boardsRef)),\n      withFirebaseTimeout(get(postsRef)),\n    ]);\n\n    let totalBoards = 0;\n    let totalPosts = 0;\n\n    if (boardsSnapshot.exists()) {\n      totalBoards = Object.keys(boardsSnapshot.val()).length;\n    }\n\n    if (postsSnapshot.exists()) {\n      const postsData = postsSnapshot.val();\n      Object.values(postsData).forEach((boardPosts: unknown) => {\n        if (typeof boardPosts === \"object\" && boardPosts !== null) {\n          totalPosts += Object.keys(boardPosts).length;\n        }\n      });\n    }\n\n    const metadata: BulletinBoardMetadata = {\n      total_boards: totalBoards,\n      total_posts: totalPosts,\n      created_at: new Date().toISOString(),\n      last_updated: new Date().toISOString(),\n    };\n\n    const metadataRef = ref(database, \"bulletin_board/metadata\");\n    await withFirebaseTimeout(set(metadataRef, metadata));\n  } catch (error) {\n    console.error(\"メタデータの更新に失敗しました:\", error);\n  }\n};\n\n// 初期スレの作成\nconst initializeBoards = async (): Promise<void> => {\n  try {\n    const now = new Date().toISOString();\n    const boardsData: Record<string, Board> = {};\n\n    Object.entries(DEFAULT_BOARDS).forEach(([id, boardConfig]) => {\n      boardsData[id] = {\n        ...boardConfig,\n        created_at: now,\n        created_by: \"system\",\n        post_count: 0,\n      };\n    });\n\n    const boardsRef = ref(database, \"bulletin_board/boards\");\n    await withFirebaseTimeout(set(boardsRef, boardsData));\n\n    await updateMetadata();\n  } catch (error) {\n    console.error(\"初期スレの作成に失敗しました:\", error);\n  }\n};\n\n// スレのタイトル更新（管理者のみ）\nexport const updateBoardTitle = async (\n  boardId: BoardId,\n  title: string,\n): Promise<boolean> => {\n  try {\n    const boardRef = ref(database, `bulletin_board/boards/${boardId}/title`);\n    await withFirebaseTimeout(set(boardRef, title));\n    return true;\n  } catch (error) {\n    console.error(\"スレのタイトル更新に失敗しました:\", error);\n    return false;\n  }\n};\n\n// スレの説明更新（管理者のみ）\nexport const updateBoardDescription = async (\n  boardId: BoardId,\n  description: string,\n): Promise<boolean> => {\n  try {\n    const boardRef = ref(\n      database,\n      `bulletin_board/boards/${boardId}/description`,\n    );\n    await withFirebaseTimeout(set(boardRef, description));\n    return true;\n  } catch (error) {\n    console.error(\"スレの説明更新に失敗しました:\", error);\n    return false;\n  }\n};\n\n// レス削除（管理者のみ）\nexport const deletePost = async (\n  boardId: BoardId,\n  postId: string,\n): Promise<boolean> => {\n  try {\n    const postRef = ref(database, `bulletin_board/posts/${boardId}/${postId}`);\n    await withFirebaseTimeout(set(postRef, null));\n    return true;\n  } catch (error) {\n    console.error(\"レスの削除に失敗しました:\", error);\n    return false;\n  }\n};\n","/**\n * Safe wrapper for localStorage operations that handles cases when localStorage is not available\n * (e.g., when cookies are disabled or in SSR environments)\n */\nexport const safeLocalStorage = {\n  getItem: (key: string): string | null => {\n    try {\n      if (typeof window !== \"undefined\") {\n        return window.localStorage.getItem(key);\n      }\n    } catch (error) {\n      console.error(\"Error accessing localStorage:\", error);\n    }\n    return null;\n  },\n\n  setItem: (key: string, value: string): void => {\n    try {\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(key, value);\n      }\n    } catch (error) {\n      console.error(\"Error setting localStorage item:\", error);\n    }\n  },\n\n  removeItem: (key: string): void => {\n    try {\n      if (typeof window !== \"undefined\") {\n        window.localStorage.removeItem(key);\n      }\n    } catch (error) {\n      console.error(\"Error removing localStorage item:\", error);\n    }\n  },\n\n  clear: (): void => {\n    try {\n      if (typeof window !== \"undefined\") {\n        window.localStorage.clear();\n      }\n    } catch (error) {\n      console.error(\"Error clearing localStorage:\", error);\n    }\n  },\n};\n","\"use client\";\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { motion } from \"framer-motion\";\nimport {\n  ArrowLeft,\n  MessageSquare,\n  Send,\n  Clock,\n  User,\n  Trash2,\n} from \"lucide-react\";\n\nimport {\n  getBoard,\n  getPostsWithPagination,\n  createPost,\n  deletePost,\n} from \"./services\";\n\nimport type { Board, Post, BoardId } from \"./types\";\n\nimport { useAuth } from \"@/context/AuthContext\";\nimport { safeLocalStorage } from \"@/utils/safeLocalStorage\";\n\ninterface BoardViewProps {\n  boardId: BoardId;\n}\n\nconst BoardView: React.FC<BoardViewProps> = ({ boardId }) => {\n  const [board, setBoard] = useState<Board | null>(null);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [posting, setPosting] = useState(false);\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n\n  const { isAdmin } = useAuth();\n\n  const POSTS_PER_PAGE = 20;\n\n  useEffect(() => {\n    const fetchData = async (): Promise<void> => {\n      try {\n        setLoading(true);\n        setError(null);\n        const [boardData, postsData] = await Promise.all([\n          getBoard(boardId),\n          getPostsWithPagination(boardId, 0, POSTS_PER_PAGE),\n        ]);\n\n        setBoard(boardData);\n        setPosts(postsData.posts);\n        setHasMore(postsData.hasMore);\n      } catch (error) {\n        console.error(\"データの取得に失敗しました:\", error);\n        setError(\n          \"スレの読み込みに失敗しました。サーバーがダウンしている可能性があります。しばらく時間をおいてから再度お試しください。\",\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    void fetchData();\n  }, [boardId]);\n\n  // 追加のレスを読み込む関数\n  const loadMorePosts = useCallback(async () => {\n    if (loadingMore || !hasMore) return;\n\n    try {\n      setLoadingMore(true);\n      const morePostsData = await getPostsWithPagination(\n        boardId,\n        posts.length,\n        POSTS_PER_PAGE,\n      );\n\n      setPosts((prevPosts) => [...prevPosts, ...morePostsData.posts]);\n      setHasMore(morePostsData.hasMore);\n    } catch (error) {\n      console.error(\"追加レスの取得に失敗しました:\", error);\n    } finally {\n      setLoadingMore(false);\n    }\n  }, [boardId, posts.length, loadingMore, hasMore]);\n\n  // スクロールイベントのハンドラ\n  useEffect(() => {\n    const handleScroll = (): void => {\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n        document.documentElement.offsetHeight - 1000 // 1000px手前で読み込み開始\n      ) {\n        void loadMorePosts();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return (): void => window.removeEventListener(\"scroll\", handleScroll);\n  }, [loadMorePosts]);\n\n  useEffect(() => {\n    // localStorageからユーザー名を取得\n    const savedUserName = safeLocalStorage.getItem(\"bulletin_board_username\");\n    if (savedUserName !== null && savedUserName !== \"\") {\n      setUserName(savedUserName);\n    }\n  }, []);\n\n  const handleSubmitPost = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    if (newPostContent.trim() === \"\") return;\n\n    setPosting(true);\n    try {\n      const author = userName.trim() === \"\" ? \"名無しさん\" : userName.trim();\n\n      // ユーザー名をlocalStorageに保存\n      if (userName.trim() !== \"\") {\n        safeLocalStorage.setItem(\"bulletin_board_username\", userName.trim());\n      }\n\n      const success = await createPost({\n        board_id: boardId,\n        author,\n        content: newPostContent.trim(),\n      });\n\n      if (success) {\n        setNewPostContent(\"\");\n        // 最初のページを再取得\n        const updatedPostsData = await getPostsWithPagination(\n          boardId,\n          0,\n          POSTS_PER_PAGE,\n        );\n        setPosts(updatedPostsData.posts);\n        setHasMore(updatedPostsData.hasMore);\n\n        // スレ情報も更新（レス数が変わる）\n        const updatedBoard = await getBoard(boardId);\n        setBoard(updatedBoard);\n      } else {\n        console.error(\"レスに失敗しました\");\n        // TODO: トースト通知などの適切なエラー表示に置き換える\n        window.alert(\n          \"レスに失敗しました。サーバーがダウンしている可能性があります。もう一度お試しください。\",\n        );\n      }\n    } catch (error) {\n      console.error(\"レスエラー:\", error);\n      // TODO: トースト通知などの適切なエラー表示に置き換える\n      window.alert(\n        \"レスに失敗しました。サーバーがダウンしている可能性があります。\",\n      );\n    } finally {\n      setPosting(false);\n    }\n  };\n\n  const handleDeletePost = async (postId: string): Promise<void> => {\n    if (!window.confirm(\"このレスを削除しますか？\")) return;\n\n    try {\n      const success = await deletePost(boardId, postId);\n      if (success) {\n        // 最初のページを再取得\n        const updatedPostsData = await getPostsWithPagination(\n          boardId,\n          0,\n          POSTS_PER_PAGE,\n        );\n        setPosts(updatedPostsData.posts);\n        setHasMore(updatedPostsData.hasMore);\n\n        const updatedBoard = await getBoard(boardId);\n        setBoard(updatedBoard);\n      } else {\n        // TODO: トースト通知などの適切なエラー表示に置き換える\n        window.alert(\n          \"削除に失敗しました。サーバーがダウンしている可能性があります。\",\n        );\n      }\n    } catch (error) {\n      console.error(\"削除エラー:\", error);\n      // TODO: トースト通知などの適切なエラー表示に置き換える\n      window.alert(\n        \"削除に失敗しました。サーバーがダウンしている可能性があります。\",\n      );\n    }\n  };\n\n  const formatDate = (dateString: string): string => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleString(\"ja-JP\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    } catch {\n      return dateString;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex min-h-screen items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-8 w-8 animate-spin rounded-full border-4 border-blue-500 border-t-transparent\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">読み込み中...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error !== null) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"mb-4\">\n            <Link\n              to=\"/bulletin-board\"\n              className=\"inline-flex items-center space-x-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>BBS一覧に戻る</span>\n            </Link>\n          </div>\n          <div className=\"mx-auto max-w-md text-center\">\n            <div className=\"mb-4 rounded-full bg-red-100 p-3 dark:bg-red-900\">\n              <MessageSquare className=\"mx-auto h-8 w-8 text-red-600 dark:text-red-400\" />\n            </div>\n            <h2 className=\"mb-2 text-xl font-semibold text-gray-900 dark:text-white\">\n              接続エラー\n            </h2>\n            <p className=\"mb-4 text-gray-600 dark:text-gray-400\">{error}</p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600\"\n            >\n              再読み込み\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (board === null) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              スレが見つかりません\n            </h1>\n            <Link\n              to=\"/bulletin-board\"\n              className=\"mt-4 inline-flex items-center space-x-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>BBS一覧に戻る</span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <div className=\"mb-4\">\n            <Link\n              to=\"/bulletin-board\"\n              className=\"inline-flex items-center space-x-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>BBS一覧に戻る</span>\n            </Link>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"rounded-lg bg-blue-100 p-3 dark:bg-blue-900\">\n              <MessageSquare className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                {board.title}\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                {board.description}\n              </p>\n              <div className=\"mt-2 flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400\">\n                <span>{board.post_count} レス</span>\n                <span\n                  className={`inline-flex rounded-full px-2 py-1 text-xs font-medium ${\n                    board.status === \"open\"\n                      ? \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\"\n                      : \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\"\n                  }`}\n                >\n                  {board.status === \"open\" ? \"オープン\" : \"クローズ\"}\n                </span>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Post Form */}\n        {board.status === \"open\" && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mb-8\"\n          >\n            <div className=\"rounded-xl border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-800\">\n              <h3 className=\"mb-4 text-lg font-semibold text-gray-900 dark:text-white\">\n                新規レス\n              </h3>\n              <form onSubmit={handleSubmitPost} className=\"space-y-4\">\n                <div>\n                  <label\n                    htmlFor=\"userName\"\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                  >\n                    ユーザー名（任意）\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"userName\"\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                    placeholder=\"ユーザ名\"\n                    className=\"mt-1 block w-full rounded-lg border border-gray-300 px-3 py-2 shadow-sm focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white\"\n                  />\n                </div>\n                <div>\n                  <label\n                    htmlFor=\"postContent\"\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                  >\n                    レス内容\n                  </label>\n                  <textarea\n                    id=\"postContent\"\n                    value={newPostContent}\n                    onChange={(e) => setNewPostContent(e.target.value)}\n                    rows={4}\n                    placeholder=\"レス内容を入力してください...\"\n                    required\n                    className=\"mt-1 block w-full rounded-lg border border-gray-300 px-3 py-2 shadow-sm focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white\"\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  disabled={posting || newPostContent.trim() === \"\"}\n                  className=\"inline-flex items-center space-x-2 rounded-lg bg-blue-600 px-4 py-2 text-white transition-colors hover:bg-blue-700 disabled:cursor-not-allowed disabled:bg-gray-400\"\n                >\n                  <Send className=\"h-4 w-4\" />\n                  <span>{posting ? \"レス中...\" : \"書き込む\"}</span>\n                </button>\n              </form>\n            </div>\n          </motion.div>\n        )}\n\n        {/* Posts List */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.2 }}\n          className=\"space-y-4\"\n        >\n          {posts.map((post, index) => (\n            <motion.div\n              key={post.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.05 }}\n              className=\"rounded-xl border border-gray-200 bg-white shadow-sm dark:border-gray-700 dark:bg-gray-800\"\n            >\n              <div className=\"p-6\">\n                <div className=\"mb-4 flex items-start justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"flex h-8 w-8 items-center justify-center rounded-full bg-blue-100 dark:bg-blue-900\">\n                      <User className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-gray-900 dark:text-white\">\n                        {post.author}\n                      </p>\n                      <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n                        <Clock className=\"h-3 w-3\" />\n                        <span>{formatDate(post.created_at)}</span>\n                        <span>#{post.post_number}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {isAdmin && (\n                    <div className=\"flex space-x-2\">\n                      <button\n                        onClick={() => handleDeletePost(post.id)}\n                        className=\"rounded-lg p-2 text-red-600 transition-colors hover:bg-red-100 dark:text-red-400 dark:hover:bg-red-900\"\n                        title=\"レスを削除\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"whitespace-pre-wrap text-gray-700 dark:text-gray-300\">\n                  {post.content}\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Loading More */}\n        {loadingMore && (\n          <div className=\"flex justify-center py-8\">\n            <div className=\"text-center\">\n              <div className=\"mx-auto h-6 w-6 animate-spin rounded-full border-4 border-blue-500 border-t-transparent\"></div>\n              <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n                レスを読み込み中...\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* No More Posts */}\n        {!hasMore && posts.length > 0 && (\n          <div className=\"py-8 text-center\">\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              すべてのレスを表示しました\n            </p>\n          </div>\n        )}\n\n        {/* Empty State */}\n        {posts.length === 0 && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"py-12 text-center\"\n          >\n            <MessageSquare className=\"mx-auto h-16 w-16 text-gray-400\" />\n            <h3 className=\"mt-4 text-lg font-medium text-gray-900 dark:text-white\">\n              まだレスがありません\n            </h3>\n            <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\n              最初のレスをしてみませんか？\n            </p>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardView;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { motion } from \"framer-motion\";\nimport { MessageSquare, Users, Clock, ArrowLeft } from \"lucide-react\";\n\nimport { getBoards } from \"./services\";\n\nimport type { Board } from \"./types\";\n\nconst BulletinBoardList: React.FC = () => {\n  const [boards, setBoards] = useState<Board[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchBoards = async (): Promise<void> => {\n      try {\n        setError(null);\n        const boardsData = await getBoards();\n        setBoards(boardsData);\n      } catch (error) {\n        console.error(\"スレの取得に失敗しました:\", error);\n        setError(\n          \"BBSの読み込みに失敗しました。サーバーがダウンしている可能性があります。しばらく時間をおいてから再度お試しください。\",\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    void fetchBoards();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"flex min-h-screen items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-8 w-8 animate-spin rounded-full border-4 border-blue-500 border-t-transparent\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">読み込み中...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error !== null) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"mb-4\">\n            <Link\n              to=\"/\"\n              className=\"inline-flex items-center space-x-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>ホームに戻る</span>\n            </Link>\n          </div>\n          <div className=\"mx-auto max-w-md text-center\">\n            <div className=\"mb-4 rounded-full bg-red-100 p-3 dark:bg-red-900\">\n              <MessageSquare className=\"mx-auto h-8 w-8 text-red-600 dark:text-red-400\" />\n            </div>\n            <h2 className=\"mb-2 text-xl font-semibold text-gray-900 dark:text-white\">\n              接続エラー\n            </h2>\n            <p className=\"mb-4 text-gray-600 dark:text-gray-400\">{error}</p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600\"\n            >\n              再読み込み\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <div className=\"mb-4\">\n            <Link\n              to=\"/\"\n              className=\"inline-flex items-center space-x-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span>ホームに戻る</span>\n            </Link>\n          </div>\n          <h1 className=\"mb-4 text-4xl font-bold text-gray-900 dark:text-white\">\n            BBS\n          </h1>\n          <p className=\"text-lg text-gray-600 dark:text-gray-400\">\n            数学部のBBSへようこそ！\n          </p>\n        </motion.div>\n\n        {/* Boards Grid */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.2 }}\n          className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\"\n        >\n          {boards.map((board, index) => (\n            <motion.div\n              key={board.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1 }}\n            >\n              <Link\n                to={`/bulletin-board?board=${board.id}`}\n                className=\"group block\"\n              >\n                <div className=\"h-full rounded-xl border border-gray-200 bg-white p-6 shadow-sm transition-all duration-300 hover:border-blue-300 hover:shadow-lg dark:border-gray-700 dark:bg-gray-800 dark:hover:border-blue-600\">\n                  {/* Board Header */}\n                  <div className=\"mb-4 flex items-start justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"rounded-lg bg-blue-100 p-2 dark:bg-blue-900\">\n                        <MessageSquare className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600 dark:text-white dark:group-hover:text-blue-400\">\n                          {board.title}\n                        </h3>\n                        <div\n                          className={`mt-1 inline-flex rounded-full px-2 py-1 text-xs font-medium ${\n                            board.status === \"open\"\n                              ? \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\"\n                              : \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\"\n                          }`}\n                        >\n                          {board.status === \"open\" ? \"オープン\" : \"クローズ\"}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Description */}\n                  <p className=\"mb-4 text-sm text-gray-600 dark:text-gray-400\">\n                    {board.description}\n                  </p>\n\n                  {/* Stats */}\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"flex items-center space-x-1 text-gray-500 dark:text-gray-400\">\n                        <Users className=\"h-4 w-4\" />\n                        <span>{board.post_count} レス</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-1 text-gray-500 dark:text-gray-400\">\n                      <Clock className=\"h-4 w-4\" />\n                      <span>#{board.order}</span>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Empty State */}\n        {boards.length === 0 && !loading && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"py-12 text-center\"\n          >\n            <MessageSquare className=\"mx-auto h-16 w-16 text-gray-400\" />\n            <h3 className=\"mt-4 text-lg font-medium text-gray-900 dark:text-white\">\n              スレがありません\n            </h3>\n            <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\n              まだスレが作成されていません。\n            </p>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BulletinBoardList;\n","import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport BoardView from \"./BulletinBoard/BoardView\";\nimport BulletinBoardList from \"./BulletinBoard/BulletinBoardList\";\nimport { BOARD_IDS } from \"./BulletinBoard/types\";\n\nimport type { BoardId } from \"./BulletinBoard/types\";\n\nconst BulletinBoard: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const boardId = searchParams.get(\"board\") as BoardId | null;\n\n  if (\n    boardId !== null &&\n    Object.values(BOARD_IDS).includes(boardId as BoardId)\n  ) {\n    return <BoardView boardId={boardId as BoardId} />;\n  }\n\n  return <BulletinBoardList />;\n};\n\nexport default BulletinBoard;\n"],"names":["__iconNode","Send","createLucideIcon","Trash2","Users","BOARD_IDS","DEFAULT_BOARDS","withTimeout","promise","timeoutMs","errorMessage","_","reject","FIREBASE_TIMEOUT_MS","withFirebaseTimeout","getBoards","boardsRef","ref","database","snapshot","get","initializeBoards","board","boardsData","a","b","error","getBoard","boardId","boardRef","getPostsWithPagination","offset","limit","postsRef","postsData","allPosts","totalCount","paginatedPosts","hasMore","createPost","newPost","board_id","author","content","boardSnapshot","postNumber","postData","newPostRef","push","postWithId","updates","serverTimestamp","update","updateMetadata","boardsSnapshot","postsSnapshot","totalBoards","totalPosts","boardPosts","metadata","metadataRef","set","now","id","boardConfig","deletePost","postId","postRef","safeLocalStorage","key","value","BoardView","setBoard","useState","posts","setPosts","loading","setLoading","loadingMore","setLoadingMore","setHasMore","posting","setPosting","newPostContent","setNewPostContent","userName","setUserName","setError","isAdmin","useAuth","POSTS_PER_PAGE","useEffect","boardData","loadMorePosts","useCallback","morePostsData","prevPosts","handleScroll","savedUserName","handleSubmitPost","e","updatedPostsData","updatedBoard","handleDeletePost","formatDate","dateString","jsxs","jsx","Link","ArrowLeft","MessageSquare","motion","post","index","User","Clock","BulletinBoardList","boards","setBoards","BulletinBoard","searchParams","useSearchParams"],"mappings":"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","x_google_ignoreList":[0,1,2]}